{"version":3,"sources":["blackjack_cljs/styles.cljs"],"mappings":";AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAUL,AAAA,AAAMC,AAAOC;AAAb,AACE,AAAA,AAAK,AAAA,AAAGA;;AAEV,AAAA,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMc,AAAA,AAACH;;AAEf,AAAA,AAAMI;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKoB,AAAA,AAACJ,AACD,AAAA,AAACA;;AAErB,AAAA,AAAMK;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACgB,AAAA,AAAOH,AACT,AAAA,AAACF,AAEJ,AAAA,AAACA,AACF,AAAA,AAAYD;;AAEtB,AAAA,AAAMO;AAAN,AAAA,AAAA,AAAA,AACc,AAAA,AAAQP,AACR,AAAA,AAACC;;AAEf,AAAA,AAAMO;AAAN,AAAA,AAAA,AAAA,AACc,AAAA,AAAMR,AACN,AAAA,AAACC;;AAEf,AAAA,AAAMQ,AAAWC;AAAjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAKA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIoB,AAAA,AAACV,AACD,AAAA,AAACA,AACD,AAAA,AAAkB,AAAA,AAAeD,AAEjC,AAAA,AAACC;;AAErB,AAAA,AAAMW;AAAN,AAAA,AAAA,AACW,AAAA,AAACX;;AAEZ,AAAA,AAAMY;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAKA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AACgB,AAAA,AAAOX,AACP,AAAA,AAAeH,AACf,AAAA,AAACC,AACD,AAAA,AAAU,AAAA,AAACA;;AAE3B,AAAA,AAAMc;AAAN,AAAA,AAAA,AACW,AAAA,AAACd;;AAEZ,AAAA,AAAMe;AAAN,AAAA,AAAA,AACW,AAAA,AAACf;;AAEZ,AAAA,AAAMgB;AAAN,AAAA,AAAA,AAAA;;AAGA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIoB,AAAA,AAAK,AAAA,AAACjB,AAChB,AAAA,AAACA,AACA,AAAA,AAACA,AACQ,AAAA,AAACA,AACD,AAAA,AAAOE,AACP,AAAA,AAACF,AAED,AAAA,AAACA;;AASrB,AAAA,AAAMkB;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA;;AAIA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAEW,AAAA,AAAU,AAAA,AAACnB;;AAEtB,AAAA,AAAMoB;AAAN,AAAA,AAAA,AAAA,AAAA,AAEW,AAAA,AAAU,AAAA,AAACpB;;AAEtB,AAAA,AAAMqB;AAAN,AAAA,AAAA,AAAA;;AAGA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACgB,AAAA,AAAOpB,AACT,AAAA,AAACF;;AAMf,AAAA,AAAMuB;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACaD,AACH,AAAA,AAAQvB;;AAElB,AAAA,AAAMyB;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACaF,AACH,AAAA,AAAMvB;;AAEhB,AAAA,AAAM0B;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACaH,AACH,AAAA,AAAUvB;;AAEpB,AAAA,AAAM2B;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGqB,AAAA,AAAU3B,AACb,AAAA,AAACC","names":["blackjack-cljs.styles/colors","blackjack-cljs.styles/sizes","num","blackjack-cljs.styles/fonts","blackjack-cljs.styles/container","blackjack-cljs.styles/game-row","blackjack-cljs.styles/heading-row","blackjack-cljs.styles/stats-wins","blackjack-cljs.styles/stats-losses","blackjack-cljs.styles/contender","end?","blackjack-cljs.styles/avatar","blackjack-cljs.styles/player-avatar-img","blackjack-cljs.styles/player-row","blackjack-cljs.styles/contender-name","blackjack-cljs.styles/card-container","blackjack-cljs.styles/card","blackjack-cljs.styles/cards","blackjack-cljs.styles/button","blackjack-cljs.styles/player-actions","blackjack-cljs.styles/button-hit","blackjack-cljs.styles/button-stand","blackjack-cljs.styles/button-new-round","blackjack-cljs.styles/end-msg","blackjack-cljs.styles/win","blackjack-cljs.styles/loss","blackjack-cljs.styles/draw","blackjack-cljs.styles/hidden-card"],"sourcesContent":["(ns blackjack-cljs.styles)\n\n(def colors\n  {:green          \"#8FE388\"\n   :red            \"#E26D5A\"\n   :primary        \"#43BCCD\"\n   :secondary      \"#7F7EFF\"\n   :primary-text   \"#2F131E\"\n   :secondary-text \"#240115\"\n   :grey-lighter   \"#F5F5F5\"\n   :grey-light     \"#EEEEEE\"})\n\n(defn sizes [num]\n  (str (* num 8) \"px\"))\n\n(def fonts\n  {:main \"Indie Flower\"})\n\n(defn container []\n  {:display               \"grid\"\n   :grid-template-rows \"20% 60% 20%\"\n   :height                \"100%\"\n   :margin-left \"auto\"\n   :margin-right \"auto\"\n   :max-width (sizes 200)})\n\n(defn game-row []\n  {:display         \"grid\"\n   :grid-template-rows \"50% 50%\"\n   :grid-template-columns \"20% 60% 20%\"\n   :justify-items \"center\"\n   :padding-top     (sizes 2)\n   :padding-bottom  (sizes 2)})\n\n(defn heading-row []\n  {:font-family (:main fonts)\n   :font-size (sizes 5)\n   :text-align \"center\"\n   :margin (sizes 2)\n   :color (:secondary colors)})\n\n(defn stats-wins []\n  {:color     (:green colors)\n   :font-size (sizes 4)})\n\n(defn stats-losses []\n  {:color     (:red colors)\n   :font-size (sizes 4)})\n\n(defn contender [end?]\n  {:display        \"flex\"\n   :flex-direction \"column\"\n   :align-items \"center\"})\n\n(defn avatar []\n  {:display         \"flex\"\n   :justify-content \"center\"\n   :align-items     \"center\"\n   :height          (sizes 15)\n   :width           (sizes 15)\n   :border          (str \"3px solid \" (:grey-lighter colors))\n   :border-radius   \"50%\"\n   :padding         (sizes 2)})\n\n(defn player-avatar-img []\n  {:height (sizes 14)})\n\n(defn player-row []\n  {:display         \"flex\"\n   :justify-content \"space-between\"\n   :align-items     \"center\"})\n\n(defn contender-name []\n  {:font-family (:main fonts)\n   :color       (:primary-text colors)\n   :font-size   (sizes 2)\n   :margin      (str \"0 \" (sizes 7))})\n\n(defn card-container []\n  {:margin (sizes 1)})\n\n(defn card []\n  {:height (sizes 25)})\n\n(defn cards []\n  {:display \"flex\"})\n\n(defn button []\n  ^{:pseudo {:hover {:background-position \"right center\"\n                     :color               \"#fff\"\n                     :text-decoration     \"none\"}}}\n  {:padding         (str (sizes 2) \" 0\")\n   :width (sizes 30)\n   :height (sizes 10)\n   :margin          (sizes 1)\n   :font-family     (:main fonts)\n   :font-size       (sizes 3)\n   :border          \"none\"\n   :border-radius   (sizes 1)\n   :text-align      \"center\"\n   :transition      \"0.5s\"\n   :background-size \"200% auto\"\n   :color           \"white\"\n   :box-shadow      \"0 0 20px #eee\"\n   :display         \"block\"\n   :outline         \"none\"})\n\n(defn player-actions []\n  {:display \"flex\"\n   :justify-content \"center\"})\n\n(defn button-hit []\n  {:background-image \"linear-gradient(to right, #FF8008 0%, #FFC837  51%, #FF8008  100%)\"\n   :margin (str \"0 \" (sizes 5))})\n\n(defn button-stand []\n  {:background-image \"linear-gradient(to right, #1FA2FF 0%, #12D8FA  51%, #1FA2FF  100%)\"\n   :margin (str \"0 \" (sizes 5))})\n\n(defn button-new-round []\n  {:background-image \"linear-gradient(to right, #642B73 0%, #C6426E  51%, #642B73  100%)\"})\n\n(defn end-msg []\n  {:font-family (:main fonts)\n   :font-size (sizes 5)\n   :display \"flex\"\n   :flex-direction \"column\"\n   :justify-content \"center\"\n   :align-items \"center\"})\n\n(defn win []\n  ^{:extend [end-msg]}\n  {:color (:green colors)})\n\n(defn loss []\n  ^{:extend [end-msg]}\n  {:color (:red colors)})\n\n(defn draw []\n  ^{:extend [end-msg]}\n  {:color (:primary colors)})\n\n(defn hidden-card []\n  {:height \"200px\"\n   :width \"142px\"\n   :background-color (:primary colors)\n   :border-radius (sizes 1)})\n\n"]}